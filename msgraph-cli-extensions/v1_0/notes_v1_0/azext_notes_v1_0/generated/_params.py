# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import (
    get_three_state_flag,
    get_enum_type
)
from msgraph.cli.core.commands.validators import validate_file_or_dict
from azext_notes_v1_0.action import (
    AddResources,
    AddLastModifiedByApplication,
    AddLinksOneNoteClientUrl,
    AddError
)


def load_arguments(self, _):

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-onenote') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-onenote') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('notebooks', type=validate_file_or_dict, help='The collection of OneNote notebooks that are owned '
                   'by the user or group. Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('operations', type=validate_file_or_dict, help='The status of OneNote operations. Getting an '
                   'operations collection is not supported, but you can get the status of long-running operations if '
                   'the Operation-Location header is returned in the response. Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('pages', type=validate_file_or_dict, help='The pages in all OneNote notebooks that are owned by the '
                   'user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('resources', action=AddResources, nargs='*', help='The image and other file resources in OneNote '
                   'pages. Getting a resources collection is not supported, but you can get the binary content of a '
                   'specific resource. Read-only. Nullable.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in all OneNote notebooks '
                   'that are owned by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in all OneNote notebooks that are owned '
                   'by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes create-operation') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='*', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-resource') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-operation') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-resource') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-operation') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-resource') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-operation') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='*', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-resource') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-onenote') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-onenote') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('notebooks', type=validate_file_or_dict, help='The collection of OneNote notebooks that are owned '
                   'by the user or group. Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('operations', type=validate_file_or_dict, help='The status of OneNote operations. Getting an '
                   'operations collection is not supported, but you can get the status of long-running operations if '
                   'the Operation-Location header is returned in the response. Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('pages', type=validate_file_or_dict, help='The pages in all OneNote notebooks that are owned by the '
                   'user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('resources', action=AddResources, nargs='*', help='The image and other file resources in OneNote '
                   'pages. Getting a resources collection is not supported, but you can get the binary content of a '
                   'specific resource. Read-only. Nullable.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in all OneNote notebooks '
                   'that are owned by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in all OneNote notebooks that are owned '
                   'by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes create-operation') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='*', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-resource') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-operation') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-resource') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-operation') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-resource') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-operation') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='*', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-resource') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-onenote') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-onenote') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('notebooks', type=validate_file_or_dict, help='The collection of OneNote notebooks that are owned '
                   'by the user or group. Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('operations', type=validate_file_or_dict, help='The status of OneNote operations. Getting an '
                   'operations collection is not supported, but you can get the status of long-running operations if '
                   'the Operation-Location header is returned in the response. Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('pages', type=validate_file_or_dict, help='The pages in all OneNote notebooks that are owned by the '
                   'user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('resources', action=AddResources, nargs='*', help='The image and other file resources in OneNote '
                   'pages. Getting a resources collection is not supported, but you can get the binary content of a '
                   'specific resource. Read-only. Nullable.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in all OneNote notebooks '
                   'that are owned by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in all OneNote notebooks that are owned '
                   'by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes create-operation') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='*', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-resource') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-operation') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-resource') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-operation') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-resource') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-operation') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='*', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-resource') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes get-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('links_one_note_client_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')
        c.argument('links_one_note_web_url', action=AddLinksOneNoteClientUrl, nargs='*', help='externalLink')

    with self.argument_context('notes update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')

    with self.argument_context('notes create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes get-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes get-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('notes update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('notes update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
