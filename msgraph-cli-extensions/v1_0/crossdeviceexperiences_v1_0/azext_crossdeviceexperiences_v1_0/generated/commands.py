# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=line-too-long

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_crossdeviceexperiences_v1_0.generated._client_factory import cf_user

    crossdeviceexperiences_v1_0_user = CliCommandType(
        operations_tmpl='azext_crossdeviceexperiences_v1_0.vendored_sdks.crossdeviceexperiences.operations._users_operations#UsersOperations.{}',
        client_factory=cf_user,
    )
    with self.command_group('crossdeviceexperiences user', crossdeviceexperiences_v1_0_user) as g:
        g.custom_command('delete', 'crossdeviceexperiences_user_delete', confirmation=True)
        g.custom_command('create-activity', 'crossdeviceexperiences_user_create_activity')
        g.custom_command('list-activity', 'crossdeviceexperiences_user_list_activity')
        g.custom_command('show-activity', 'crossdeviceexperiences_user_show_activity')
        g.custom_command('update-activity', 'crossdeviceexperiences_user_update_activity')

    from azext_crossdeviceexperiences_v1_0.generated._client_factory import cf_user_activity

    crossdeviceexperiences_v1_0_user_activity = CliCommandType(
        operations_tmpl='azext_crossdeviceexperiences_v1_0.vendored_sdks.crossdeviceexperiences.operations._users_activities_operations#UsersActivitiesOperations.{}',
        client_factory=cf_user_activity,
    )
    with self.command_group('crossdeviceexperiences user-activity', crossdeviceexperiences_v1_0_user_activity) as g:
        g.custom_command('delete', 'crossdeviceexperiences_user_activity_delete', confirmation=True)
        g.custom_command('create-history-item', 'crossdeviceexperiences_user_activity_create_history_item')
        g.custom_command('list-history-item', 'crossdeviceexperiences_user_activity_list_history_item')
        g.custom_command('show-history-item', 'crossdeviceexperiences_user_activity_show_history_item')
        g.custom_command('update-history-item', 'crossdeviceexperiences_user_activity_update_history_item')

    from azext_crossdeviceexperiences_v1_0.generated._client_factory import cf_user_activity_history_item

    crossdeviceexperiences_v1_0_user_activity_history_item = CliCommandType(
        operations_tmpl='azext_crossdeviceexperiences_v1_0.vendored_sdks.crossdeviceexperiences.operations._users_activities_history_items_operations#UsersActivitiesHistoryItemsOperations.{}',
        client_factory=cf_user_activity_history_item,
    )
    with self.command_group(
        'crossdeviceexperiences user-activity-history-item', crossdeviceexperiences_v1_0_user_activity_history_item
    ) as g:
        g.custom_command('delete', 'crossdeviceexperiences_user_activity_history_item_delete', confirmation=True)
        g.custom_command('set-ref-activity', 'crossdeviceexperiences_user_activity_history_item_set_ref_activity')
        g.custom_command('show-activity', 'crossdeviceexperiences_user_activity_history_item_show_activity')
        g.custom_command('show-ref-activity', 'crossdeviceexperiences_user_activity_history_item_show_ref_activity')

    with self.command_group('crossdeviceexperiences_v1_0', is_experimental=True):
        pass
