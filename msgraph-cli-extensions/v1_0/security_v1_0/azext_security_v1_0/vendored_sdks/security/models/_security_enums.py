# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum19(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_GROUP_NAME = "activityGroupName"
    ASSIGNED_TO = "assignedTo"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    CATEGORY = "category"
    CLOSED_DATE_TIME = "closedDateTime"
    CLOUD_APP_STATES = "cloudAppStates"
    COMMENTS = "comments"
    CONFIDENCE = "confidence"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DETECTION_IDS = "detectionIds"
    EVENT_DATE_TIME = "eventDateTime"
    FEEDBACK = "feedback"
    FILE_STATES = "fileStates"
    HISTORY_STATES = "historyStates"
    HOST_STATES = "hostStates"
    INCIDENT_IDS = "incidentIds"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MALWARE_STATES = "malwareStates"
    NETWORK_CONNECTIONS = "networkConnections"
    PROCESSES = "processes"
    RECOMMENDED_ACTIONS = "recommendedActions"
    REGISTRY_KEY_STATES = "registryKeyStates"
    SECURITY_RESOURCES = "securityResources"
    SEVERITY = "severity"
    SOURCE_MATERIALS = "sourceMaterials"
    STATUS = "status"
    TAGS = "tags"
    TITLE = "title"
    TRIGGERS = "triggers"
    USER_STATES = "userStates"
    VENDOR_INFORMATION = "vendorInformation"
    VULNERABILITY_STATES = "vulnerabilityStates"

class Enum20(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTION_TYPE = "actionType"
    ACTION_TYPE_DESC = "actionType desc"
    ACTION_URL = "actionUrl"
    ACTION_URL_DESC = "actionUrl desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    COMPLIANCE_INFORMATION = "complianceInformation"
    COMPLIANCE_INFORMATION_DESC = "complianceInformation desc"
    CONTROL_CATEGORY = "controlCategory"
    CONTROL_CATEGORY_DESC = "controlCategory desc"
    CONTROL_STATE_UPDATES = "controlStateUpdates"
    CONTROL_STATE_UPDATES_DESC = "controlStateUpdates desc"
    DEPRECATED = "deprecated"
    DEPRECATED_DESC = "deprecated desc"
    IMPLEMENTATION_COST = "implementationCost"
    IMPLEMENTATION_COST_DESC = "implementationCost desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    MAX_SCORE = "maxScore"
    MAX_SCORE_DESC = "maxScore desc"
    RANK = "rank"
    RANK_DESC = "rank desc"
    REMEDIATION = "remediation"
    REMEDIATION_DESC = "remediation desc"
    REMEDIATION_IMPACT = "remediationImpact"
    REMEDIATION_IMPACT_DESC = "remediationImpact desc"
    SERVICE = "service"
    SERVICE_DESC = "service desc"
    THREATS = "threats"
    THREATS_DESC = "threats desc"
    TIER = "tier"
    TIER_DESC = "tier desc"
    TITLE = "title"
    TITLE_DESC = "title desc"
    USER_IMPACT = "userImpact"
    USER_IMPACT_DESC = "userImpact desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"

class Enum21(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION_TYPE = "actionType"
    ACTION_URL = "actionUrl"
    AZURE_TENANT_ID = "azureTenantId"
    COMPLIANCE_INFORMATION = "complianceInformation"
    CONTROL_CATEGORY = "controlCategory"
    CONTROL_STATE_UPDATES = "controlStateUpdates"
    DEPRECATED = "deprecated"
    IMPLEMENTATION_COST = "implementationCost"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MAX_SCORE = "maxScore"
    RANK = "rank"
    REMEDIATION = "remediation"
    REMEDIATION_IMPACT = "remediationImpact"
    SERVICE = "service"
    THREATS = "threats"
    TIER = "tier"
    TITLE = "title"
    USER_IMPACT = "userImpact"
    VENDOR_INFORMATION = "vendorInformation"

class Enum22(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION_TYPE = "actionType"
    ACTION_URL = "actionUrl"
    AZURE_TENANT_ID = "azureTenantId"
    COMPLIANCE_INFORMATION = "complianceInformation"
    CONTROL_CATEGORY = "controlCategory"
    CONTROL_STATE_UPDATES = "controlStateUpdates"
    DEPRECATED = "deprecated"
    IMPLEMENTATION_COST = "implementationCost"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MAX_SCORE = "maxScore"
    RANK = "rank"
    REMEDIATION = "remediation"
    REMEDIATION_IMPACT = "remediationImpact"
    SERVICE = "service"
    THREATS = "threats"
    TIER = "tier"
    TITLE = "title"
    USER_IMPACT = "userImpact"
    VENDOR_INFORMATION = "vendorInformation"

class Enum23(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVE_USER_COUNT = "activeUserCount"
    ACTIVE_USER_COUNT_DESC = "activeUserCount desc"
    AVERAGE_COMPARATIVE_SCORES = "averageComparativeScores"
    AVERAGE_COMPARATIVE_SCORES_DESC = "averageComparativeScores desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    CONTROL_SCORES = "controlScores"
    CONTROL_SCORES_DESC = "controlScores desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    CURRENT_SCORE = "currentScore"
    CURRENT_SCORE_DESC = "currentScore desc"
    ENABLED_SERVICES = "enabledServices"
    ENABLED_SERVICES_DESC = "enabledServices desc"
    LICENSED_USER_COUNT = "licensedUserCount"
    LICENSED_USER_COUNT_DESC = "licensedUserCount desc"
    MAX_SCORE = "maxScore"
    MAX_SCORE_DESC = "maxScore desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVE_USER_COUNT = "activeUserCount"
    AVERAGE_COMPARATIVE_SCORES = "averageComparativeScores"
    AZURE_TENANT_ID = "azureTenantId"
    CONTROL_SCORES = "controlScores"
    CREATED_DATE_TIME = "createdDateTime"
    CURRENT_SCORE = "currentScore"
    ENABLED_SERVICES = "enabledServices"
    LICENSED_USER_COUNT = "licensedUserCount"
    MAX_SCORE = "maxScore"
    VENDOR_INFORMATION = "vendorInformation"

class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVE_USER_COUNT = "activeUserCount"
    AVERAGE_COMPARATIVE_SCORES = "averageComparativeScores"
    AZURE_TENANT_ID = "azureTenantId"
    CONTROL_SCORES = "controlScores"
    CREATED_DATE_TIME = "createdDateTime"
    CURRENT_SCORE = "currentScore"
    ENABLED_SERVICES = "enabledServices"
    LICENSED_USER_COUNT = "licensedUserCount"
    MAX_SCORE = "maxScore"
    VENDOR_INFORMATION = "vendorInformation"

class Get0ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALERTS = "alerts"
    SECURE_SCORE_CONTROL_PROFILES = "secureScoreControlProfiles"
    SECURE_SCORES = "secureScores"

class Get1ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ALERTS = "alerts"
    SECURE_SCORE_CONTROL_PROFILES = "secureScoreControlProfiles"
    SECURE_SCORES = "secureScores"

class Get5ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVITY_GROUP_NAME = "activityGroupName"
    ACTIVITY_GROUP_NAME_DESC = "activityGroupName desc"
    ASSIGNED_TO = "assignedTo"
    ASSIGNED_TO_DESC = "assignedTo desc"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_SUBSCRIPTION_ID_DESC = "azureSubscriptionId desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    CATEGORY = "category"
    CATEGORY_DESC = "category desc"
    CLOSED_DATE_TIME = "closedDateTime"
    CLOSED_DATE_TIME_DESC = "closedDateTime desc"
    CLOUD_APP_STATES = "cloudAppStates"
    CLOUD_APP_STATES_DESC = "cloudAppStates desc"
    COMMENTS = "comments"
    COMMENTS_DESC = "comments desc"
    CONFIDENCE = "confidence"
    CONFIDENCE_DESC = "confidence desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DETECTION_IDS = "detectionIds"
    DETECTION_IDS_DESC = "detectionIds desc"
    EVENT_DATE_TIME = "eventDateTime"
    EVENT_DATE_TIME_DESC = "eventDateTime desc"
    FEEDBACK = "feedback"
    FEEDBACK_DESC = "feedback desc"
    FILE_STATES = "fileStates"
    FILE_STATES_DESC = "fileStates desc"
    HISTORY_STATES = "historyStates"
    HISTORY_STATES_DESC = "historyStates desc"
    HOST_STATES = "hostStates"
    HOST_STATES_DESC = "hostStates desc"
    INCIDENT_IDS = "incidentIds"
    INCIDENT_IDS_DESC = "incidentIds desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    MALWARE_STATES = "malwareStates"
    MALWARE_STATES_DESC = "malwareStates desc"
    NETWORK_CONNECTIONS = "networkConnections"
    NETWORK_CONNECTIONS_DESC = "networkConnections desc"
    PROCESSES = "processes"
    PROCESSES_DESC = "processes desc"
    RECOMMENDED_ACTIONS = "recommendedActions"
    RECOMMENDED_ACTIONS_DESC = "recommendedActions desc"
    REGISTRY_KEY_STATES = "registryKeyStates"
    REGISTRY_KEY_STATES_DESC = "registryKeyStates desc"
    SECURITY_RESOURCES = "securityResources"
    SECURITY_RESOURCES_DESC = "securityResources desc"
    SEVERITY = "severity"
    SEVERITY_DESC = "severity desc"
    SOURCE_MATERIALS = "sourceMaterials"
    SOURCE_MATERIALS_DESC = "sourceMaterials desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    TAGS = "tags"
    TAGS_DESC = "tags desc"
    TITLE = "title"
    TITLE_DESC = "title desc"
    TRIGGERS = "triggers"
    TRIGGERS_DESC = "triggers desc"
    USER_STATES = "userStates"
    USER_STATES_DESC = "userStates desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"
    VULNERABILITY_STATES = "vulnerabilityStates"
    VULNERABILITY_STATES_DESC = "vulnerabilityStates desc"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_GROUP_NAME = "activityGroupName"
    ASSIGNED_TO = "assignedTo"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    CATEGORY = "category"
    CLOSED_DATE_TIME = "closedDateTime"
    CLOUD_APP_STATES = "cloudAppStates"
    COMMENTS = "comments"
    CONFIDENCE = "confidence"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DETECTION_IDS = "detectionIds"
    EVENT_DATE_TIME = "eventDateTime"
    FEEDBACK = "feedback"
    FILE_STATES = "fileStates"
    HISTORY_STATES = "historyStates"
    HOST_STATES = "hostStates"
    INCIDENT_IDS = "incidentIds"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MALWARE_STATES = "malwareStates"
    NETWORK_CONNECTIONS = "networkConnections"
    PROCESSES = "processes"
    RECOMMENDED_ACTIONS = "recommendedActions"
    REGISTRY_KEY_STATES = "registryKeyStates"
    SECURITY_RESOURCES = "securityResources"
    SEVERITY = "severity"
    SOURCE_MATERIALS = "sourceMaterials"
    STATUS = "status"
    TAGS = "tags"
    TITLE = "title"
    TRIGGERS = "triggers"
    USER_STATES = "userStates"
    VENDOR_INFORMATION = "vendorInformation"
    VULNERABILITY_STATES = "vulnerabilityStates"

class MicrosoftGraphAlertFeedback(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    TRUE_POSITIVE = "truePositive"
    FALSE_POSITIVE = "falsePositive"
    BENIGN_POSITIVE = "benignPositive"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphAlertSeverity(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    INFORMATIONAL = "informational"
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphAlertStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    NEW_ALERT = "newAlert"
    IN_PROGRESS = "inProgress"
    RESOLVED = "resolved"
    DISMISSED = "dismissed"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphConnectionDirection(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    INBOUND = "inbound"
    OUTBOUND = "outbound"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphConnectionStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ATTEMPTED = "attempted"
    SUCCEEDED = "succeeded"
    BLOCKED = "blocked"
    FAILED = "failed"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphEmailRole(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    SENDER = "sender"
    RECIPIENT = "recipient"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphFileHashType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    SHA1 = "sha1"
    SHA256 = "sha256"
    MD5 = "md5"
    AUTHENTICODE_HASH256 = "authenticodeHash256"
    LS_HASH = "lsHash"
    CTPH = "ctph"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphLogonType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    INTERACTIVE = "interactive"
    REMOTE_INTERACTIVE = "remoteInteractive"
    NETWORK = "network"
    BATCH = "batch"
    SERVICE = "service"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphProcessIntegrityLevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    UNTRUSTED = "untrusted"
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    SYSTEM = "system"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRegistryHive(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    CURRENT_CONFIG = "currentConfig"
    CURRENT_USER = "currentUser"
    LOCAL_MACHINE_SAM = "localMachineSam"
    LOCAL_MACHINE_SECURITY = "localMachineSecurity"
    LOCAL_MACHINE_SOFTWARE = "localMachineSoftware"
    LOCAL_MACHINE_SYSTEM = "localMachineSystem"
    USERS_DEFAULT = "usersDefault"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRegistryOperation(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    CREATE = "create"
    MODIFY = "modify"
    DELETE = "delete"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRegistryValueType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    BINARY = "binary"
    DWORD = "dword"
    DWORD_LITTLE_ENDIAN = "dwordLittleEndian"
    DWORD_BIG_ENDIAN = "dwordBigEndian"
    EXPAND_SZ = "expandSz"
    LINK = "link"
    MULTI_SZ = "multiSz"
    NONE = "none"
    QWORD = "qword"
    QWORDLITTLE_ENDIAN = "qwordlittleEndian"
    SZ = "sz"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphSecurityNetworkProtocol(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    IP = "ip"
    ICMP = "icmp"
    UNKNOWN = "unknown"
    IGMP = "igmp"
    GGP = "ggp"
    IPV4 = "ipv4"
    TCP = "tcp"
    PUP = "pup"
    UDP = "udp"
    IDP = "idp"
    IPV6 = "ipv6"
    IPV6_ROUTING_HEADER = "ipv6RoutingHeader"
    IPV6_FRAGMENT_HEADER = "ipv6FragmentHeader"
    IP_SEC_ENCAPSULATING_SECURITY_PAYLOAD = "ipSecEncapsulatingSecurityPayload"
    IP_SEC_AUTHENTICATION_HEADER = "ipSecAuthenticationHeader"
    ICMP_V6 = "icmpV6"
    IPV6_NO_NEXT_HEADER = "ipv6NoNextHeader"
    IPV6_DESTINATION_OPTIONS = "ipv6DestinationOptions"
    ND = "nd"
    RAW = "raw"
    IPX = "ipx"
    SPX = "spx"
    SPX_II = "spxII"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphSecurityResourceType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ATTACKED = "attacked"
    RELATED = "related"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphUserAccountSecurityType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    STANDARD = "standard"
    POWER = "power"
    ADMINISTRATOR = "administrator"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"
