# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: 'vs2017-win2016'
  
strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    python build_scripts/build_extensions.py
  displayName: 'Build msgraph extensions'

- task: CmdLine@2
  displayName: 'Build Windows MSI'
  inputs:
    workindDirectory: $(Agent.BuildDirectory)
    script: |
      python setup.py sdist bdist_wheel
      set  CLI_VERSION=$(CLI_VERSION)
      set
      build_scripts/windows/scripts/build.cmd

- task: PublishPipelineArtifact@0
  displayName: 'Publish Artifact: MSI'
  inputs:
    TargetPath: 'build_scripts/windows/out/'
    ArtifactName: msi

- task: GitHubRelease@0
  inputs:
    gitHubConnection: 'ddyett'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'auto'
