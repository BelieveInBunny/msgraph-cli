# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from azure.cli.core.commands.parameters import (
    get_three_state_flag,
    get_enum_type
)
from azure.cli.core.commands.validators import validate_file_or_dict
from azext_notes.action import (
    AddResources,
    AddApplication,
    AddError
)


def load_arguments(self, _):

    with self.argument_context('notes group delete-onenote') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group show-onenote') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group update-onenote') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('notebooks', type=validate_file_or_dict, help='The collection of OneNote notebooks that are owned '
                   'by the user or group. Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('operations', type=validate_file_or_dict, help='The status of OneNote operations. Getting an '
                   'operations collection is not supported, but you can get the status of long-running operations if '
                   'the Operation-Location header is returned in the response. Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('pages', type=validate_file_or_dict, help='The pages in all OneNote notebooks that are owned by the '
                   'user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('resources', action=AddResources, nargs='+', help='The image and other file resources in OneNote '
                   'pages. Getting a resources collection is not supported, but you can get the binary content of a '
                   'specific resource. Read-only. Nullable.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in all OneNote notebooks '
                   'that are owned by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in all OneNote notebooks that are owned '
                   'by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote create-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote create-operation') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='+', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes group-onenote create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote create-resource') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes group-onenote create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote delete-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote delete-operation') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote delete-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote delete-resource') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote list-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote list-operation') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote list-resource') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote show-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote show-operation') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote show-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote show-resource') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote update-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote update-operation') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='+', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes group-onenote update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote update-resource') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes group-onenote update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenotebook create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenotebook delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenotebook-section-group create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-group create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenotebook-section-group delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-group delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-group delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-group delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-group list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-group update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenotebook-section-group update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-group update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenotebook-section-group-section create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-group-section delete-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-group-section delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-group-section delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-group-section list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group-section show-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group-section show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group-section show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group-section update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-group-section update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-group-section update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenotebook-section-group-section-page delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-group-section-page delete-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-group-section-page show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group-section-page show-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-group-section-page update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-group-section-page update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section delete-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section show-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenotebook-section-page delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-page delete-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-page show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-page show-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-page update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-page update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-parent-section-group create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-parent-section-group create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenotebook-section-parent-section-group delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-parent-section-group delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-parent-section-group delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-parent-section-group delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenotebook-section-parent-section-group list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-parent-section-group list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-parent-section-group show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-parent-section-group show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-parent-section-group show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-parent-section-group show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenotebook-section-parent-section-group update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-parent-section-group update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenotebook-section-parent-section-group update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenotebook-section-parent-section-group update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page delete-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page show-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-notebook delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section delete-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section show-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-group-section update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-notebook-section create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section delete-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section show-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-notebook-section-parent-section-group update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section delete-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section show-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section-parent-notebook-section-group update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group-parent-notebook create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group-parent-notebook create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group-parent-notebook delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group-parent-notebook delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group-parent-notebook list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group-parent-notebook list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group-parent-notebook show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group-parent-notebook show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group-parent-notebook update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-page-parent-section-parent-section-group-parent-notebook update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group-parent-notebook create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-parent-notebook create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group-parent-notebook delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-parent-notebook delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-parent-notebook list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-parent-notebook list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-parent-notebook show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-parent-notebook show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-parent-notebook update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-parent-notebook update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section delete-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section show-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section-page delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section-page delete-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section-page show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section-page show-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section-page update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-parent-notebook-section-page update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-section create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-section delete-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-section delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-section delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-section list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section show-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-section update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-section update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group-section-page delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-section-page delete-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-section-page show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section-page show-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section-page update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-section-page update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-section-page-parent-notebook create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-section-page-parent-notebook create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group-section-page-parent-notebook delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-section-page-parent-notebook delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-section-page-parent-notebook list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section-page-parent-notebook list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section-page-parent-notebook show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section-page-parent-notebook show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section-page-parent-notebook update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-section-page-parent-notebook update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group-section-parent-notebook create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-section-parent-notebook create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-group-section-parent-notebook delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-section-parent-notebook delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-group-section-parent-notebook list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section-parent-notebook list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section-parent-notebook show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section-parent-notebook show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-group-section-parent-notebook update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-group-section-parent-notebook update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section create-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section delete-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section list-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section show-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section update-page') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-page delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-page delete-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-page show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page show-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-page update-parent-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-page-parent-notebook create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-page-parent-notebook create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-page-parent-notebook delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-page-parent-notebook delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-page-parent-notebook list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page-parent-notebook list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page-parent-notebook show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page-parent-notebook show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page-parent-notebook update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-page-parent-notebook update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-page-parent-notebook-section-group update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-parent-notebook create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-parent-notebook create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-parent-notebook delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-notebook delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-notebook list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-notebook list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-notebook show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-notebook show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-notebook update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-parent-notebook update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-parent-notebook-section-group update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-parent-section-group create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-parent-section-group create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-parent-section-group delete-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-section-group delete-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-section-group delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-section-group delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-section-group list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-section-group list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-section-group show-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-section-group show-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-section-group show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-section-group show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-section-group update-parent-notebook') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-parent-section-group update-parent-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-parent-section-group update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-parent-section-group update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-parent-section-group-parent-notebook create-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-parent-section-group-parent-notebook create-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes group-onenote-section-parent-section-group-parent-notebook delete-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-section-group-parent-notebook delete-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes group-onenote-section-parent-section-group-parent-notebook list-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-section-group-parent-notebook list-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-section-group-parent-notebook show-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-section-group-parent-notebook show-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes group-onenote-section-parent-section-group-parent-notebook update-section') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes group-onenote-section-parent-section-group-parent-notebook update-section-group') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site delete-onenote') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site show-onenote') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site update-onenote') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('notebooks', type=validate_file_or_dict, help='The collection of OneNote notebooks that are owned '
                   'by the user or group. Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('operations', type=validate_file_or_dict, help='The status of OneNote operations. Getting an '
                   'operations collection is not supported, but you can get the status of long-running operations if '
                   'the Operation-Location header is returned in the response. Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('pages', type=validate_file_or_dict, help='The pages in all OneNote notebooks that are owned by the '
                   'user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('resources', action=AddResources, nargs='+', help='The image and other file resources in OneNote '
                   'pages. Getting a resources collection is not supported, but you can get the binary content of a '
                   'specific resource. Read-only. Nullable.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in all OneNote notebooks '
                   'that are owned by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in all OneNote notebooks that are owned '
                   'by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote create-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote create-operation') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='+', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes site-onenote create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote create-resource') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes site-onenote create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote delete-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote delete-operation') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote delete-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote delete-resource') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote list-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote list-operation') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote list-resource') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote show-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote show-operation') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote show-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote show-resource') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote update-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote update-operation') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='+', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes site-onenote update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote update-resource') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes site-onenote update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenotebook create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenotebook delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenotebook-section-group create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-group create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenotebook-section-group delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-group delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-group delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-group delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-group list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-group update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenotebook-section-group update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-group update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenotebook-section-group-section create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-group-section delete-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-group-section delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-group-section delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-group-section list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group-section show-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group-section show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group-section show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group-section update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-group-section update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-group-section update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenotebook-section-group-section-page delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-group-section-page delete-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-group-section-page show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group-section-page show-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-group-section-page update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-group-section-page update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section delete-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section show-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenotebook-section-page delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-page delete-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-page show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-page show-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-page update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-page update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-parent-section-group create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-parent-section-group create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenotebook-section-parent-section-group delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-parent-section-group delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-parent-section-group delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-parent-section-group delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenotebook-section-parent-section-group list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-parent-section-group list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-parent-section-group show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-parent-section-group show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-parent-section-group show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-parent-section-group show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenotebook-section-parent-section-group update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-parent-section-group update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenotebook-section-parent-section-group update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenotebook-section-parent-section-group update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page delete-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page show-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-notebook delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section delete-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section show-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-group-section update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-notebook-section create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section delete-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section show-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-notebook-section-parent-section-group update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section delete-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section show-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section-parent-notebook-section-group update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group-parent-notebook create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group-parent-notebook create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group-parent-notebook delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group-parent-notebook delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group-parent-notebook list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group-parent-notebook list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group-parent-notebook show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group-parent-notebook show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group-parent-notebook update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-page-parent-section-parent-section-group-parent-notebook update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group-parent-notebook create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-parent-notebook create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group-parent-notebook delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-parent-notebook delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-parent-notebook list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-parent-notebook list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-parent-notebook show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-parent-notebook show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-parent-notebook update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-parent-notebook update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section delete-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section show-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section-page delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section-page delete-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section-page show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section-page show-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section-page update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-parent-notebook-section-page update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-section create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-section delete-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-section delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-section delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-section list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section show-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-section update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-section update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group-section-page delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-section-page delete-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-section-page show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section-page show-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section-page update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-section-page update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-section-page-parent-notebook create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-section-page-parent-notebook create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group-section-page-parent-notebook delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-section-page-parent-notebook delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-section-page-parent-notebook list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section-page-parent-notebook list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section-page-parent-notebook show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section-page-parent-notebook show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section-page-parent-notebook update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-section-page-parent-notebook update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group-section-parent-notebook create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-section-parent-notebook create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-group-section-parent-notebook delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-section-parent-notebook delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-group-section-parent-notebook list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section-parent-notebook list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section-parent-notebook show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section-parent-notebook show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-group-section-parent-notebook update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-group-section-parent-notebook update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section create-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section delete-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section list-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section show-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section update-page') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-page delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-page delete-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-page show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page show-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-page update-parent-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-page-parent-notebook create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-page-parent-notebook create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-page-parent-notebook delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-page-parent-notebook delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-page-parent-notebook list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page-parent-notebook list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page-parent-notebook show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page-parent-notebook show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page-parent-notebook update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-page-parent-notebook update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-page-parent-notebook-section-group update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-parent-notebook create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-parent-notebook create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-parent-notebook delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-notebook delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-notebook list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-notebook list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-notebook show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-notebook show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-notebook update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-parent-notebook update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-parent-notebook-section-group update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-parent-section-group create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-parent-section-group create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-parent-section-group delete-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-section-group delete-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-section-group delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-section-group delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-section-group list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-section-group list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-section-group show-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-section-group show-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-section-group show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-section-group show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-section-group update-parent-notebook') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-parent-section-group update-parent-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-parent-section-group update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-parent-section-group update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-parent-section-group-parent-notebook create-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-parent-section-group-parent-notebook create-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes site-onenote-section-parent-section-group-parent-notebook delete-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-section-group-parent-notebook delete-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes site-onenote-section-parent-section-group-parent-notebook list-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-section-group-parent-notebook list-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-section-group-parent-notebook show-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-section-group-parent-notebook show-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes site-onenote-section-parent-section-group-parent-notebook update-section') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes site-onenote-section-parent-section-group-parent-notebook update-section-group') as c:
        c.argument('site_id', type=str, help='key: id of site')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user delete-onenote') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user show-onenote') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user update-onenote') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('notebooks', type=validate_file_or_dict, help='The collection of OneNote notebooks that are owned '
                   'by the user or group. Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('operations', type=validate_file_or_dict, help='The status of OneNote operations. Getting an '
                   'operations collection is not supported, but you can get the status of long-running operations if '
                   'the Operation-Location header is returned in the response. Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('pages', type=validate_file_or_dict, help='The pages in all OneNote notebooks that are owned by the '
                   'user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('resources', action=AddResources, nargs='+', help='The image and other file resources in OneNote '
                   'pages. Getting a resources collection is not supported, but you can get the binary content of a '
                   'specific resource. Read-only. Nullable.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in all OneNote notebooks '
                   'that are owned by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in all OneNote notebooks that are owned '
                   'by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote create-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote create-operation') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='+', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes user-onenote create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote create-resource') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes user-onenote create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote delete-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote delete-operation') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote delete-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote delete-resource') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote list-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote list-operation') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote list-resource') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote show-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote show-operation') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote show-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote show-resource') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote update-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote update-operation') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_operation_id', type=str, help='key: id of onenoteOperation')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='The start time of the operation.')
        c.argument('last_action_date_time', help='The time of the last action of the operation.')
        c.argument('status', arg_type=get_enum_type(['NotStarted', 'Running', 'Completed', 'Failed']), help='')
        c.argument('error', action=AddError, nargs='+', help='onenoteOperationError')
        c.argument('percent_complete', type=str, help='The operation percent complete if the operation is still in '
                   'running status')
        c.argument('resource_id', type=str, help='The resource id.')
        c.argument('resource_location', type=str, help='The resource URI for the object. For example, the resource URI '
                   'for a copied page or section.')

    with self.argument_context('notes user-onenote update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote update-resource') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_resource_id', type=str, help='key: id of onenoteResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('content', help='The content stream')
        c.argument('content_url', type=str, help='The URL for downloading the content')

    with self.argument_context('notes user-onenote update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenotebook create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenotebook delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenotebook-section-group create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-group create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenotebook-section-group delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-group delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-group delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-group delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-group list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-group update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenotebook-section-group update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-group update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenotebook-section-group-section create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-group-section delete-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-group-section delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-group-section delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-group-section list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group-section show-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group-section show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group-section show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group-section update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-group-section update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-group-section update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenotebook-section-group-section-page delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-group-section-page delete-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-group-section-page show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group-section-page show-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-group-section-page update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-group-section-page update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section delete-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section show-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenotebook-section-page delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-page delete-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-page show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-page show-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-page update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-page update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-parent-section-group create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-parent-section-group create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenotebook-section-parent-section-group delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-parent-section-group delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-parent-section-group delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-parent-section-group delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenotebook-section-parent-section-group list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-parent-section-group list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-parent-section-group show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-parent-section-group show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-parent-section-group show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-parent-section-group show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenotebook-section-parent-section-group update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-parent-section-group update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenotebook-section-parent-section-group update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenotebook-section-parent-section-group update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('notebook_id', type=str, help='key: id of notebook')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page delete-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page show-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-notebook delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section delete-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section show-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-group-section update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-notebook-section create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section delete-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section show-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-notebook-section-parent-section-group update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section delete-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section show-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_page_id1', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section-parent-notebook-section-group update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group-parent-notebook create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group-parent-notebook create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group-parent-notebook delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group-parent-notebook delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group-parent-notebook list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group-parent-notebook list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group-parent-notebook show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group-parent-notebook show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group-parent-notebook update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-page-parent-section-parent-section-group-parent-notebook update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group-parent-notebook create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-parent-notebook create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group-parent-notebook delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-parent-notebook delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-parent-notebook list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-parent-notebook list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-parent-notebook show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-parent-notebook show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-parent-notebook update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-parent-notebook update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section delete-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section show-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section-page delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section-page delete-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section-page show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section-page show-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section-page update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-parent-notebook-section-page update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-section create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-section delete-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-section delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-section delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-section list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section show-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-section update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-section update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group-section-page delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-section-page delete-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-section-page show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section-page show-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section-page update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-section-page update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-section-page-parent-notebook create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-section-page-parent-notebook create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group-section-page-parent-notebook delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-section-page-parent-notebook delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-section-page-parent-notebook list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section-page-parent-notebook list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section-page-parent-notebook show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section-page-parent-notebook show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section-page-parent-notebook update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-section-page-parent-notebook update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group-section-parent-notebook create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-section-parent-notebook create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-group-section-parent-notebook delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-section-parent-notebook delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-group-section-parent-notebook list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section-parent-notebook list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section-parent-notebook show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section-parent-notebook show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-group-section-parent-notebook update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-group-section-parent-notebook update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section create-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section delete-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section list-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section show-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section update-page') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('content', help='The page\'s HTML content.')
        c.argument('content_url', type=str, help='The URL for the page\'s HTML content.  Read-only.')
        c.argument('created_by_app_id', type=str, help='The unique identifier of the application that created the '
                   'page. Read-only.')
        c.argument('last_modified_date_time', help='The date and time when the page was last modified. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('level', type=int, help='The indentation level of the page. Read-only.')
        c.argument('order', type=int, help='The order of the page within its parent section. Read-only.')
        c.argument('title', type=str, help='The title of the page.')
        c.argument('user_tags', nargs='+', help='')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section', type=validate_file_or_dict, help='onenoteSection Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-page delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-page delete-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-page show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page show-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-page update-parent-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-page-parent-notebook create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-page-parent-notebook create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-page-parent-notebook delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-page-parent-notebook delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-page-parent-notebook list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page-parent-notebook list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page-parent-notebook show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page-parent-notebook show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page-parent-notebook update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-page-parent-notebook update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-page-parent-notebook-section-group update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_page_id', type=str, help='key: id of onenotePage')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-parent-notebook create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-parent-notebook create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-parent-notebook delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-notebook delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-notebook list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-notebook list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-notebook show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-notebook show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-notebook update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-parent-notebook update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-parent-notebook-section-group update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('section_group_id1', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-parent-section-group create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-parent-section-group create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-parent-section-group delete-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-section-group delete-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-section-group delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-section-group delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-section-group list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-section-group list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-section-group show-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-section-group show-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-section-group show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-section-group show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-section-group update-parent-notebook') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'notebook. Read-only.')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='Indicates whether the notebook is shared. If '
                   'true, the contents of the notebook can be seen by people other than the owner. Read-only.')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the notebook. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the notebook. Read-only.')
        c.argument('user_role', arg_type=get_enum_type(['Owner', 'Contributor', 'None', 'Reader']), help='')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the notebook. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the notebook. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-parent-section-group update-parent-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-parent-section-group update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-parent-section-group update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-parent-section-group-parent-notebook create-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-parent-section-group-parent-notebook create-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')

    with self.argument_context('notes user-onenote-section-parent-section-group-parent-notebook delete-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-section-group-parent-notebook delete-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('notes user-onenote-section-parent-section-group-parent-notebook list-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-section-group-parent-notebook list-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-section-group-parent-notebook show-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-section-group-parent-notebook show-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('notes user-onenote-section-parent-section-group-parent-notebook update-section') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('onenote_section_id1', type=str, help='key: id of onenoteSection')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('is_default', arg_type=get_three_state_flag(), help='Indicates whether this is the user\'s default '
                   'section. Read-only.')
        c.argument('pages_url', type=str, help='The pages endpoint where you can get details for all the pages in the '
                   'section. Read-only.')
        c.argument('pages', type=validate_file_or_dict, help='The collection of pages in the section.  Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('href', type=str, help='The url of the link.', arg_group='Links One Note Web Url')
        c.argument('microsoft_graph_external_link_href', type=str, help='The url of the link.', arg_group='Links One '
                   'Note Client Url')

    with self.argument_context('notes user-onenote-section-parent-section-group-parent-notebook update-section-group') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('onenote_section_id', type=str, help='key: id of onenoteSection')
        c.argument('section_group_id', type=str, help='key: id of sectionGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('gen_self', type=str, help='The endpoint where you can get details about the page. Read-only.')
        c.argument('created_date_time', help='The date and time when the page was created. The timestamp represents '
                   'date and time information using ISO 8601 format and is always in UTC time. For example, midnight '
                   'UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. Read-only.')
        c.argument('display_name', type=str, help='The name of the notebook.')
        c.argument('last_modified_date_time', help='The date and time when the notebook was last modified. The '
                   'timestamp represents date and time information using ISO 8601 format and is always in UTC time. '
                   'For example, midnight UTC on Jan 1, 2014 would look like this: \'2014-01-01T00:00:00Z\'. '
                   'Read-only.')
        c.argument('application', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('device', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('user', action=AddApplication, nargs='+', help='identity', arg_group='Last Modified By')
        c.argument('microsoft_graph_identity_application', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_device', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('microsoft_graph_identity_user', action=AddApplication, nargs='+', help='identity',
                   arg_group='Created By')
        c.argument('section_groups_url', type=str, help='The URL for the sectionGroups navigation property, which '
                   'returns all the section groups in the section group. Read-only.')
        c.argument('sections_url', type=str, help='The URL for the sections navigation property, which returns all the '
                   'sections in the section group. Read-only.')
        c.argument('parent_notebook', type=validate_file_or_dict, help='notebook Expected value: '
                   'json-string/@json-file.')
        c.argument('parent_section_group', type=validate_file_or_dict, help='sectionGroup Expected value: '
                   'json-string/@json-file.')
        c.argument('section_groups', type=validate_file_or_dict, help='The section groups in the section. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('sections', type=validate_file_or_dict, help='The sections in the section group. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
