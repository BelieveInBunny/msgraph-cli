# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=bad-continuation
# pylint: disable=line-too-long

from azure.cli.core.commands import CliCommandType
from azext_identitysignins.generated._client_factory import (
    cf_data_policy_operation_data_policy_operation,
    cf_identity,
    cf_identity_conditional_access,
    cf_identity_provider_identity_provider,
    cf_information_protection_information_protection,
    cf_information_protection,
    cf_information_protection_threat_assessment_request,
    cf_invitation_invitation,
    cf_invitation,
    cf_oauth2permission_grant_oauth2permission_grant,
    cf_oauth2permission_grant,
    cf_organization,
    cf_policy_policy_root,
    cf_policy,
    cf_policy_permission_grant_policy,
)


identitysignins_data_policy_operation_data_policy_operation = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._data_policy_operations_data_policy_operation_operations#DataPolicyOperationsDataPolicyOperationOperations.{}',
    client_factory=cf_data_policy_operation_data_policy_operation,
)


identitysignins_identity = CliCommandType(
    operations_tmpl=(
        'azext_identitysignins.vendored_sdks.identitysignins.operations._identity_operations#IdentityOperations.{}'
    ),
    client_factory=cf_identity,
)


identitysignins_identity_conditional_access = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._identity_conditional_access_operations#IdentityConditionalAccessOperations.{}',
    client_factory=cf_identity_conditional_access,
)


identitysignins_identity_provider_identity_provider = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._identity_providers_identity_provider_operations#IdentityProvidersIdentityProviderOperations.{}',
    client_factory=cf_identity_provider_identity_provider,
)


identitysignins_information_protection_information_protection = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._information_protection_information_protection_operations#InformationProtectionInformationProtectionOperations.{}',
    client_factory=cf_information_protection_information_protection,
)


identitysignins_information_protection = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._information_protection_operations#InformationProtectionOperations.{}',
    client_factory=cf_information_protection,
)


identitysignins_information_protection_threat_assessment_request = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._information_protection_threat_assessment_requests_operations#InformationProtectionThreatAssessmentRequestsOperations.{}',
    client_factory=cf_information_protection_threat_assessment_request,
)


identitysignins_invitation_invitation = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._invitations_invitation_operations#InvitationsInvitationOperations.{}',
    client_factory=cf_invitation_invitation,
)


identitysignins_invitation = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._invitations_operations#InvitationsOperations.{}',
    client_factory=cf_invitation,
)


identitysignins_oauth2permission_grant_oauth2permission_grant = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._oauth2_permission_grants_oauth2_permission_grant_operations#Oauth2PermissionGrantsOAuth2PermissionGrantOperations.{}',
    client_factory=cf_oauth2permission_grant_oauth2permission_grant,
)


identitysignins_oauth2permission_grant = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._oauth2_permission_grants_operations#Oauth2PermissionGrantsOperations.{}',
    client_factory=cf_oauth2permission_grant,
)


identitysignins_organization = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._organization_operations#OrganizationOperations.{}',
    client_factory=cf_organization,
)


identitysignins_policy_policy_root = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._policies_policy_root_operations#PoliciesPolicyRootOperations.{}',
    client_factory=cf_policy_policy_root,
)


identitysignins_policy = CliCommandType(
    operations_tmpl=(
        'azext_identitysignins.vendored_sdks.identitysignins.operations._policies_operations#PoliciesOperations.{}'
    ),
    client_factory=cf_policy,
)


identitysignins_policy_permission_grant_policy = CliCommandType(
    operations_tmpl='azext_identitysignins.vendored_sdks.identitysignins.operations._policies_permission_grant_policies_operations#PoliciesPermissionGrantPoliciesOperations.{}',
    client_factory=cf_policy_permission_grant_policy,
)


def load_command_table(self, _):

    with self.command_group(
        'identitysignins data-policy-operation-data-policy-operation',
        identitysignins_data_policy_operation_data_policy_operation,
        client_factory=cf_data_policy_operation_data_policy_operation,
    ) as g:
        g.custom_command(
            'create-data-policy-operation',
            'identitysignins_data_policy_operation_data_policy_operation_create_data_policy_operation',
        )
        g.custom_command(
            'delete-data-policy-operation',
            'identitysignins_data_policy_operation_data_policy_operation_delete_data_policy_operation',
        )
        g.custom_command(
            'list-data-policy-operation',
            'identitysignins_data_policy_operation_data_policy_operation_list_data_policy_operation',
        )
        g.custom_command(
            'show-data-policy-operation',
            'identitysignins_data_policy_operation_data_policy_operation_show_data_policy_operation',
        )
        g.custom_command(
            'update-data-policy-operation',
            'identitysignins_data_policy_operation_data_policy_operation_update_data_policy_operation',
        )

    with self.command_group('identitysignins identity', identitysignins_identity, client_factory=cf_identity) as g:
        g.custom_command('delete-conditional-access', 'identitysignins_identity_delete_conditional_access')
        g.custom_command('show-conditional-access', 'identitysignins_identity_show_conditional_access')
        g.custom_command('update-conditional-access', 'identitysignins_identity_update_conditional_access')

    with self.command_group(
        'identitysignins identity-conditional-access',
        identitysignins_identity_conditional_access,
        client_factory=cf_identity_conditional_access,
    ) as g:
        g.custom_command('create-named-location', 'identitysignins_identity_conditional_access_create_named_location')
        g.custom_command('create-policy', 'identitysignins_identity_conditional_access_create_policy')
        g.custom_command('delete-named-location', 'identitysignins_identity_conditional_access_delete_named_location')
        g.custom_command('delete-policy', 'identitysignins_identity_conditional_access_delete_policy')
        g.custom_command('list-named-location', 'identitysignins_identity_conditional_access_list_named_location')
        g.custom_command('list-policy', 'identitysignins_identity_conditional_access_list_policy')
        g.custom_command('show-named-location', 'identitysignins_identity_conditional_access_show_named_location')
        g.custom_command('show-policy', 'identitysignins_identity_conditional_access_show_policy')
        g.custom_command('update-named-location', 'identitysignins_identity_conditional_access_update_named_location')
        g.custom_command('update-policy', 'identitysignins_identity_conditional_access_update_policy')

    with self.command_group(
        'identitysignins identity-provider-identity-provider',
        identitysignins_identity_provider_identity_provider,
        client_factory=cf_identity_provider_identity_provider,
    ) as g:
        g.custom_command(
            'create-identity-provider', 'identitysignins_identity_provider_identity_provider_create_identity_provider'
        )
        g.custom_command(
            'delete-identity-provider', 'identitysignins_identity_provider_identity_provider_delete_identity_provider'
        )
        g.custom_command(
            'list-identity-provider', 'identitysignins_identity_provider_identity_provider_list_identity_provider'
        )
        g.custom_command(
            'show-identity-provider', 'identitysignins_identity_provider_identity_provider_show_identity_provider'
        )
        g.custom_command(
            'update-identity-provider', 'identitysignins_identity_provider_identity_provider_update_identity_provider'
        )

    with self.command_group(
        'identitysignins information-protection-information-protection',
        identitysignins_information_protection_information_protection,
        client_factory=cf_information_protection_information_protection,
    ) as g:
        g.custom_command(
            'show-information-protection',
            'identitysignins_information_protection_information_protection_show_information_protection',
        )
        g.custom_command(
            'update-information-protection',
            'identitysignins_information_protection_information_protection_update_information_protection',
        )

    with self.command_group(
        'identitysignins information-protection',
        identitysignins_information_protection,
        client_factory=cf_information_protection,
    ) as g:
        g.custom_command(
            'create-threat-assessment-request',
            'identitysignins_information_protection_create_threat_assessment_request',
        )
        g.custom_command(
            'delete-threat-assessment-request',
            'identitysignins_information_protection_delete_threat_assessment_request',
        )
        g.custom_command(
            'list-threat-assessment-request', 'identitysignins_information_protection_list_threat_assessment_request'
        )
        g.custom_command(
            'show-threat-assessment-request', 'identitysignins_information_protection_show_threat_assessment_request'
        )
        g.custom_command(
            'update-threat-assessment-request',
            'identitysignins_information_protection_update_threat_assessment_request',
        )

    with self.command_group(
        'identitysignins information-protection-threat-assessment-request',
        identitysignins_information_protection_threat_assessment_request,
        client_factory=cf_information_protection_threat_assessment_request,
    ) as g:
        g.custom_command(
            'create-result', 'identitysignins_information_protection_threat_assessment_request_create_result'
        )
        g.custom_command(
            'delete-result', 'identitysignins_information_protection_threat_assessment_request_delete_result'
        )
        g.custom_command('list-result', 'identitysignins_information_protection_threat_assessment_request_list_result')
        g.custom_command('show-result', 'identitysignins_information_protection_threat_assessment_request_show_result')
        g.custom_command(
            'update-result', 'identitysignins_information_protection_threat_assessment_request_update_result'
        )

    with self.command_group(
        'identitysignins invitation-invitation',
        identitysignins_invitation_invitation,
        client_factory=cf_invitation_invitation,
    ) as g:
        g.custom_command('create-invitation', 'identitysignins_invitation_invitation_create_invitation')
        g.custom_command('delete-invitation', 'identitysignins_invitation_invitation_delete_invitation')
        g.custom_command('list-invitation', 'identitysignins_invitation_invitation_list_invitation')
        g.custom_command('show-invitation', 'identitysignins_invitation_invitation_show_invitation')
        g.custom_command('update-invitation', 'identitysignins_invitation_invitation_update_invitation')

    with self.command_group(
        'identitysignins invitation', identitysignins_invitation, client_factory=cf_invitation
    ) as g:
        g.custom_command('delete-ref-invited-user', 'identitysignins_invitation_delete_ref_invited_user')
        g.custom_command('set-ref-invited-user', 'identitysignins_invitation_set_ref_invited_user')
        g.custom_command('show-invited-user', 'identitysignins_invitation_show_invited_user')
        g.custom_command('show-ref-invited-user', 'identitysignins_invitation_show_ref_invited_user')

    with self.command_group(
        'identitysignins oauth2-permission-grant-o-auth2-permission-grant',
        identitysignins_oauth2permission_grant_oauth2permission_grant,
        client_factory=cf_oauth2permission_grant_oauth2permission_grant,
    ) as g:
        g.custom_command(
            'create-o-auth2-permission-grant',
            'identitysignins_oauth2_permission_grant_o_auth2_permission_grant_create_o_auth2_permission_grant',
        )
        g.custom_command(
            'delete-o-auth2-permission-grant',
            'identitysignins_oauth2_permission_grant_o_auth2_permission_grant_delete_o_auth2_permission_grant',
        )
        g.custom_command(
            'list-o-auth2-permission-grant',
            'identitysignins_oauth2_permission_grant_o_auth2_permission_grant_list_o_auth2_permission_grant',
        )
        g.custom_command(
            'show-o-auth2-permission-grant',
            'identitysignins_oauth2_permission_grant_o_auth2_permission_grant_show_o_auth2_permission_grant',
        )
        g.custom_command(
            'update-o-auth2-permission-grant',
            'identitysignins_oauth2_permission_grant_o_auth2_permission_grant_update_o_auth2_permission_grant',
        )

    with self.command_group(
        'identitysignins oauth2-permission-grant',
        identitysignins_oauth2permission_grant,
        client_factory=cf_oauth2permission_grant,
    ) as g:
        g.custom_command('delta', 'identitysignins_oauth2_permission_grant_delta')

    with self.command_group(
        'identitysignins organization', identitysignins_organization, client_factory=cf_organization
    ) as g:
        g.custom_command(
            'create-ref-certificate-based-auth-configuration',
            'identitysignins_organization_create_ref_certificate_based_auth_configuration',
        )
        g.custom_command(
            'list-certificate-based-auth-configuration',
            'identitysignins_organization_list_certificate_based_auth_configuration',
        )
        g.custom_command(
            'list-ref-certificate-based-auth-configuration',
            'identitysignins_organization_list_ref_certificate_based_auth_configuration',
        )

    with self.command_group(
        'identitysignins policy-policy-root', identitysignins_policy_policy_root, client_factory=cf_policy_policy_root
    ) as g:
        g.custom_command('show-policy-root', 'identitysignins_policy_policy_root_show_policy_root')
        g.custom_command('update-policy-root', 'identitysignins_policy_policy_root_update_policy_root')

    with self.command_group('identitysignins policy', identitysignins_policy, client_factory=cf_policy) as g:
        g.custom_command(
            'create-activity-based-timeout-policy', 'identitysignins_policy_create_activity_based_timeout_policy'
        )
        g.custom_command('create-claim-mapping-policy', 'identitysignins_policy_create_claim_mapping_policy')
        g.custom_command('create-conditional-access-policy', 'identitysignins_policy_create_conditional_access_policy')
        g.custom_command(
            'create-home-realm-discovery-policy', 'identitysignins_policy_create_home_realm_discovery_policy'
        )
        g.custom_command('create-permission-grant-policy', 'identitysignins_policy_create_permission_grant_policy')
        g.custom_command('create-token-issuance-policy', 'identitysignins_policy_create_token_issuance_policy')
        g.custom_command('create-token-lifetime-policy', 'identitysignins_policy_create_token_lifetime_policy')
        g.custom_command(
            'delete-activity-based-timeout-policy', 'identitysignins_policy_delete_activity_based_timeout_policy'
        )
        g.custom_command('delete-claim-mapping-policy', 'identitysignins_policy_delete_claim_mapping_policy')
        g.custom_command('delete-conditional-access-policy', 'identitysignins_policy_delete_conditional_access_policy')
        g.custom_command(
            'delete-home-realm-discovery-policy', 'identitysignins_policy_delete_home_realm_discovery_policy'
        )
        g.custom_command(
            'delete-identity-security-default-enforcement-policy',
            'identitysignins_policy_delete_identity_security_default_enforcement_policy',
        )
        g.custom_command('delete-permission-grant-policy', 'identitysignins_policy_delete_permission_grant_policy')
        g.custom_command('delete-token-issuance-policy', 'identitysignins_policy_delete_token_issuance_policy')
        g.custom_command('delete-token-lifetime-policy', 'identitysignins_policy_delete_token_lifetime_policy')
        g.custom_command(
            'list-activity-based-timeout-policy', 'identitysignins_policy_list_activity_based_timeout_policy'
        )
        g.custom_command('list-claim-mapping-policy', 'identitysignins_policy_list_claim_mapping_policy')
        g.custom_command('list-conditional-access-policy', 'identitysignins_policy_list_conditional_access_policy')
        g.custom_command('list-home-realm-discovery-policy', 'identitysignins_policy_list_home_realm_discovery_policy')
        g.custom_command('list-permission-grant-policy', 'identitysignins_policy_list_permission_grant_policy')
        g.custom_command('list-token-issuance-policy', 'identitysignins_policy_list_token_issuance_policy')
        g.custom_command('list-token-lifetime-policy', 'identitysignins_policy_list_token_lifetime_policy')
        g.custom_command(
            'show-activity-based-timeout-policy', 'identitysignins_policy_show_activity_based_timeout_policy'
        )
        g.custom_command('show-claim-mapping-policy', 'identitysignins_policy_show_claim_mapping_policy')
        g.custom_command('show-conditional-access-policy', 'identitysignins_policy_show_conditional_access_policy')
        g.custom_command('show-home-realm-discovery-policy', 'identitysignins_policy_show_home_realm_discovery_policy')
        g.custom_command(
            'show-identity-security-default-enforcement-policy',
            'identitysignins_policy_show_identity_security_default_enforcement_policy',
        )
        g.custom_command('show-permission-grant-policy', 'identitysignins_policy_show_permission_grant_policy')
        g.custom_command('show-token-issuance-policy', 'identitysignins_policy_show_token_issuance_policy')
        g.custom_command('show-token-lifetime-policy', 'identitysignins_policy_show_token_lifetime_policy')
        g.custom_command(
            'update-activity-based-timeout-policy', 'identitysignins_policy_update_activity_based_timeout_policy'
        )
        g.custom_command('update-claim-mapping-policy', 'identitysignins_policy_update_claim_mapping_policy')
        g.custom_command('update-conditional-access-policy', 'identitysignins_policy_update_conditional_access_policy')
        g.custom_command(
            'update-home-realm-discovery-policy', 'identitysignins_policy_update_home_realm_discovery_policy'
        )
        g.custom_command(
            'update-identity-security-default-enforcement-policy',
            'identitysignins_policy_update_identity_security_default_enforcement_policy',
        )
        g.custom_command('update-permission-grant-policy', 'identitysignins_policy_update_permission_grant_policy')
        g.custom_command('update-token-issuance-policy', 'identitysignins_policy_update_token_issuance_policy')
        g.custom_command('update-token-lifetime-policy', 'identitysignins_policy_update_token_lifetime_policy')

    with self.command_group(
        'identitysignins policy-permission-grant-policy',
        identitysignins_policy_permission_grant_policy,
        client_factory=cf_policy_permission_grant_policy,
    ) as g:
        g.custom_command('create-exclude', 'identitysignins_policy_permission_grant_policy_create_exclude')
        g.custom_command('create-include', 'identitysignins_policy_permission_grant_policy_create_include')
        g.custom_command('delete-exclude', 'identitysignins_policy_permission_grant_policy_delete_exclude')
        g.custom_command('delete-include', 'identitysignins_policy_permission_grant_policy_delete_include')
        g.custom_command('list-exclude', 'identitysignins_policy_permission_grant_policy_list_exclude')
        g.custom_command('list-include', 'identitysignins_policy_permission_grant_policy_list_include')
        g.custom_command('show-exclude', 'identitysignins_policy_permission_grant_policy_show_exclude')
        g.custom_command('show-include', 'identitysignins_policy_permission_grant_policy_show_include')
        g.custom_command('update-exclude', 'identitysignins_policy_permission_grant_policy_update_exclude')
        g.custom_command('update-include', 'identitysignins_policy_permission_grant_policy_update_include')

    with self.command_group('identitysignins', is_experimental=True):
        pass
